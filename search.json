[{"path":"https://rwparsons.github.io/GLMMcosinor/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to GLMMcosinor","title":"Contributing to GLMMcosinor","text":"outlines propose change GLMMcosinor.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/CONTRIBUTING.html","id":"please-contribute","dir":"","previous_headings":"","what":"Please contribute!","title":"Contributing to GLMMcosinor","text":"like see change GLMMcosinor description doesn’t help, create issue contact (email DESCRIPTION).","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to GLMMcosinor","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to GLMMcosinor","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to GLMMcosinor","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"RWParsons/GLMMcosinor\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to GLMMcosinor","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":[]},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/GLMMcosinor.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"GLMMcosinor","text":"GLMMcosinor package allows user fit generalised linear models based circadian data, allows users summarise, predict, plot based modelling. Existing packages focused primarily Gaussian data. circadian regression modelling packages allowed users specify generalised linear models, limited flexibility. GLMMcosinor takes comprehensive approach modelling utilising glmmTMB package, allows users model circadian data wide range distributions (full list - see ?family ?glmmTMB::family_glmmTMB) including: Binomial Guassian Inverse Gaussian Gamma Poisson Negative Binomial table shows features available within GLMMcosinor methods. name language multicomponent disp zi rhythmdiff diff_est family estimates ref GLMMcosinor R ✓ ✓ ✓ ✗ ✓ n > 15 family listed glmmTMB: Gaussian, Gamma, Binomial, Poisson, … Amplitude, Acrophase, Mesor Parsons, 2023 CircaCompare R ✗ ✗ ✗ ✗ ✓ n = 1 Gaussian Amplitude,Acrophase, Mesor Parsons,2020 Cosinor R ✗ ✗ ✗ ✓ ✓ n = ? Gaussian Amplitude,Acrophase, Mesor Sachs, 2014 Cosinor2 R ✗ ✗ ✗ ✓ ✓ n = ? Gaussian Amplitude,Acrophase, Mesor Mutak, 2018 CosinorPy Python ✓ ✗ ✗ ✓ ✓ n = 3 Gaussian, Poisson, negative-binomial Amplitude, Acrophase, Mesor Moskon, 2020 DiscoRhythm R ✗ ✗ ✗ ✗ ✗ n = ? Gaussian Amplitude,Acrophase Carlucci, 2019 FMM R ✓ ✗ ✗ ✗ ✓ n = 1 Gaussian Amplitude, FMM phase angle parameters: alpha, beta, gamma Fernández, 2022 Kronos R ✓ ✗ ✗ ✓ ✓ n = ? Gaussian Amplitude,Acrophase, Mesor Singer, 2019 LimoRhyde R ✗ ✗ ✗ ✓ ✓ n = ? Gaussian Amplitude,Acrophase, Period, Mesor Singer, 2019 RhythmCount Python ✓ ✗ ✓ ✗ ✓ n = 6 Poisson, generalised Poisson, zero-inflated Poisson, negative binomial, zero-inflated negative-binomial Amplitude, Acrophase, Mesor, Zenith Velikajne, 2022","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/GLMMcosinor.html","id":"cosinor-glmm","dir":"Articles","previous_headings":"","what":"cosinor.glmm()","title":"GLMMcosinor","text":"cosinor.glmm() wrangles data appropriately fit cosinor model given formula specified user. formula argument cosinor.glmm() specified using lme4 style (details see vignette(\"lmer\", package = \"lme4\")). difference allows use amp_acro() call within formula used identify circadian components relevant variables data.frame. combination covariates can also included formula well random effects zero-inflation (ziformula) dispersion (dispformula) formulae. detailed examples specify models, see mixed-models, model-specification multiple-components vignettes. , fit simple cosinor model without grouping variable. output shows coefficients fit within cosinor model well (transformed) estimates amplitude (amp) acrophase (acr). example , amplitude phase estimated separately two groups intercept term shared. represents shared estimate MESOR (Midline Statistic Rhythm) rhythm-adjusted mean groups. Similarly normal regression model lme4 glmmTMB, can add term X model can estimate difference MESOR two groups. may also interested estmating MESOR two groups separately, rather difference groups. achieve , can remove intercept term using 0 +. amp_acro() function controls cosinor components (fixed effects portion ) model. provides user ability specify grouping structures, period rhythm, number components. includes several arguments user needs specify: group (name grouping variable dataset). column within dataset passed cosinor.glmm() data argument. time (name time column). , ensure name matches name time values dataset. Also, ensure argument string. n_components (number components). user wishes fit multicomponent cosinor model, can specify number components . Note value need match length group period arguments combined component. multicomponent model one component grouped aren’t, vector input group must still length n_components non-grouped components represented group = NA. example, n_components = 3, group argument length 3, position character corresponds component group argument describes: example , multicomponent cosinor model two components. first component grouped X variable input data whereas second component grouped. resulting output, can see component represented suffixes (1 2). first component grouping structure second represented amp2 acr2 (transformed) parameter estimates. multicomponent model specified (n_components > 1) length group period 1, assumed one group/period values specified apply components: instance, following two cosinor.glmm() calls fit models:","code":"data(vitamind) cosinor.glmm(Y ~ amp_acro(time, period = 12), data = filter(vitamind, X == 0)) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ main_rrr1 + main_sss1  #>  #>  Raw Coefficients:  #>             Estimate #> (Intercept) 29.68979 #> main_rrr1    0.93079 #> main_sss1    6.20099 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 29.68979 #> amp          6.27046 #> acr         -1.42181 cosinor.glmm(Y ~ amp_acro(time, group = \"X\", period = 12), data = vitamind) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X:main_rrr1 + X:main_sss1  #>  #>  Raw Coefficients:  #>              Estimate #> (Intercept)  30.32687 #> X0:main_rrr1  0.86520 #> X1:main_rrr1  6.47625 #> X0:main_sss1  6.24438 #> X1:main_sss1  4.66701 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 30.32687 #> [X=0]:amp    6.30404 #> [X=1]:amp    7.98266 #> [X=0]:acr   -1.43312 #> [X=1]:acr   -0.62444 cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + X:main_rrr1 + X:main_sss1  #>  #>  Raw Coefficients:  #>              Estimate #> (Intercept)  29.68980 #> X1            1.90186 #> X0:main_rrr1  0.93079 #> X1:main_rrr1  6.51029 #> X0:main_sss1  6.20099 #> X1:main_sss1  4.81846 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 29.68980 #> [X=1]        1.90186 #> [X=0]:amp    6.27046 #> [X=1]:amp    8.09947 #> [X=0]:acr   -1.42181 #> [X=1]:acr   -0.63715 cosinor.glmm(Y ~ 0 + X + amp_acro(time, group = \"X\", period = 12), data = vitamind) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + X:main_rrr1 + X:main_sss1 - 1  #>  #>  Raw Coefficients:  #>              Estimate #> X0           29.68980 #> X1           31.59165 #> X0:main_rrr1  0.93079 #> X1:main_rrr1  6.51029 #> X0:main_sss1  6.20101 #> X1:main_sss1  4.81847 #>  #>  Transformed Coefficients:  #>           Estimate #> [X=0]     29.68980 #> [X=1]     31.59165 #> [X=0]:amp  6.27048 #> [X=1]:amp  8.09948 #> [X=0]:acr -1.42181 #> [X=1]:acr -0.63716 cosinor.glmm(   Y ~ X + amp_acro(time, n_components = 2, group = c(\"X\", NA), period = c(12, 8)),   data = vitamind ) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + main_rrr2 + main_sss2 + X:main_rrr1 + X:main_sss1  #>  #>  Raw Coefficients:  #>              Estimate #> (Intercept)  29.90862 #> X1            1.96928 #> main_rrr2    -0.31512 #> main_sss2    -1.15607 #> X0:main_rrr1  1.82520 #> X1:main_rrr1  7.42911 #> X0:main_sss1  6.05465 #> X1:main_sss1  4.62041 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 29.90862 #> [X=1]        1.96928 #> [X=0]:amp1   6.32378 #> [X=1]:amp1   8.74871 #> amp2         1.19825 #> [X=0]:acr1  -1.27801 #> [X=1]:acr1  -0.55639 #> acr2         1.83691 cosinor.glmm(   Y ~ X + amp_acro(time, n_components = 2, group = \"X\", period = 12),   data = vitamind ) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + X:main_rrr1 + X:main_sss1 + X:main_rrr2 + X:main_sss2  #>  #>  Raw Coefficients:  #>              Estimate #> (Intercept)  29.68978 #> X1            1.90186 #> X0:main_rrr1  0.46539 #> X1:main_rrr1  3.25513 #> X0:main_sss1  3.10051 #> X1:main_sss1  2.40923 #> X0:main_rrr2  0.46539 #> X1:main_rrr2  3.25513 #> X0:main_sss2  3.10051 #> X1:main_sss2  2.40923 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 29.68978 #> [X=1]        1.90186 #> [X=0]:amp1   3.13524 #> [X=1]:amp1   4.04973 #> [X=0]:amp2   3.13524 #> [X=1]:amp2   4.04973 #> [X=0]:acr1  -1.42181 #> [X=1]:acr1  -0.63716 #> [X=0]:acr2  -1.42181 #> [X=1]:acr2  -0.63716  cosinor.glmm(   Y ~ X + amp_acro(time, n_components = 2, group = c(\"X\", \"X\"), period = c(12, 12)),   data = vitamind ) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + X:main_rrr1 + X:main_sss1 + X:main_rrr2 + X:main_sss2  #>  #>  Raw Coefficients:  #>              Estimate #> (Intercept)  29.68978 #> X1            1.90186 #> X0:main_rrr1  0.46539 #> X1:main_rrr1  3.25513 #> X0:main_sss1  3.10051 #> X1:main_sss1  2.40923 #> X0:main_rrr2  0.46539 #> X1:main_rrr2  3.25513 #> X0:main_sss2  3.10051 #> X1:main_sss2  2.40923 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 29.68978 #> [X=1]        1.90186 #> [X=0]:amp1   3.13524 #> [X=1]:amp1   4.04973 #> [X=0]:amp2   3.13524 #> [X=1]:amp2   4.04973 #> [X=0]:acr1  -1.42181 #> [X=1]:acr1  -0.63716 #> [X=0]:acr2  -1.42181 #> [X=1]:acr2  -0.63716"},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/GLMMcosinor.html","id":"using-summary","dir":"Articles","previous_headings":"","what":"Using summary()","title":"GLMMcosinor","text":"summary() method cosinor.glmm objects provides detailed summary model parameter estimates uncertainty. outputs estimates, standard errors, confidence intervals, p-values raw model parameters transformed (amplitude, acrophase) parameters. summary statistics represent comparison groups cosinor components - role test_cosinor() function. example use summary():","code":"object <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) summary(object) #>  #>  Conditional Model  #> Raw model coefficients: #>                estimate standard.error   lower.CI upper.CI    p.value     #> (Intercept)  29.6897959      0.4583696 28.7914079 30.58818 < 2.22e-16 *** #> X1            1.9018623      0.7919688  0.3496320  3.45409   0.016331 *   #> X0:main_rrr1  0.9307876      0.6260656 -0.2962784  2.15785   0.137087     #> X1:main_rrr1  6.5102900      0.9303406  4.6868560  8.33372 2.6011e-12 *** #> X0:main_sss1  6.2009896      0.6701952  4.8874311  7.51455 < 2.22e-16 *** #> X1:main_sss1  4.8184618      0.8963299  3.0616875  6.57524 7.6257e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Transformed coefficients: #>                estimate standard.error    lower.CI upper.CI    p.value     #> (Intercept) 29.68979587     0.45836964 28.79140787 30.58818 < 2.22e-16 *** #> [X=1]        1.90186227     0.79196879  0.34963197  3.45409   0.016331 *   #> [X=0]:amp1   6.27045757     0.66965642  4.95795510  7.58296 < 2.22e-16 *** #> [X=1]:amp1   8.09947222     1.10283566  5.93795403 10.26099 2.0696e-13 *** #> [X=0]:acr1  -1.42180558     0.09993559 -1.61767574 -1.22594 < 2.22e-16 *** #> [X=1]:acr1  -0.63715441     0.14043625 -0.91240440 -0.36190 5.7069e-06 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/GLMMcosinor.html","id":"using-predict","dir":"Articles","previous_headings":"","what":"Using predict()","title":"GLMMcosinor","text":"predict() method cosinor.glmm objects allows users get predicted values model either existing new data. (predicted values used generating plots using plot().)","code":"fit <- cosinor.glmm(Y ~ X + amp_acro(X, group = NA, period = 12), data = vitamind) predict(fit) #>   [1] 29.54238 29.54238 31.18315 31.18315 31.18315 29.54238 31.18315 29.54238 #>   [9] 29.54238 29.54238 31.18315 31.18315 29.54238 31.18315 29.54238 29.54238 #>  [17] 31.18315 29.54238 29.54238 31.18315 29.54238 29.54238 31.18315 29.54238 #>  [25] 31.18315 31.18315 31.18315 29.54238 29.54238 31.18315 29.54238 31.18315 #>  [33] 29.54238 31.18315 29.54238 29.54238 29.54238 31.18315 31.18315 29.54238 #>  [41] 31.18315 29.54238 31.18315 31.18315 29.54238 29.54238 29.54238 29.54238 #>  [49] 29.54238 29.54238 31.18315 31.18315 29.54238 31.18315 29.54238 29.54238 #>  [57] 29.54238 29.54238 29.54238 31.18315 29.54238 29.54238 29.54238 31.18315 #>  [65] 29.54238 29.54238 29.54238 29.54238 29.54238 31.18315 29.54238 29.54238 #>  [73] 29.54238 29.54238 29.54238 29.54238 29.54238 31.18315 31.18315 31.18315 #>  [81] 29.54238 31.18315 29.54238 31.18315 29.54238 29.54238 29.54238 29.54238 #>  [89] 29.54238 29.54238 29.54238 29.54238 31.18315 29.54238 31.18315 29.54238 #>  [97] 31.18315 29.54238 31.18315 29.54238 29.54238 29.54238 29.54238 29.54238 #> [105] 29.54238 29.54238 31.18315 29.54238 29.54238 29.54238 29.54238 29.54238 #> [113] 31.18315 29.54238 29.54238 29.54238 29.54238 29.54238 31.18315 31.18315 #> [121] 31.18315 31.18315 31.18315 29.54238 31.18315 31.18315 29.54238 29.54238 #> [129] 29.54238 31.18315 29.54238 31.18315 29.54238 31.18315 31.18315 29.54238 #> [137] 29.54238 29.54238 29.54238 31.18315 29.54238 31.18315 31.18315 29.54238 #> [145] 29.54238 29.54238 31.18315 29.54238 31.18315 31.18315 31.18315 31.18315 #> [153] 29.54238 29.54238 29.54238 29.54238 29.54238 29.54238 29.54238 29.54238 #> [161] 29.54238 31.18315 29.54238 31.18315 31.18315 31.18315 29.54238 29.54238 #> [169] 31.18315 29.54238 29.54238 29.54238 31.18315 29.54238 31.18315 29.54238 #> [177] 29.54238 29.54238 29.54238 29.54238 31.18315 29.54238 31.18315 29.54238 #> [185] 29.54238 29.54238 29.54238 29.54238 29.54238 29.54238 29.54238 29.54238 #> [193] 31.18315 29.54238 29.54238 29.54238 29.54238 29.54238 29.54238 29.54238"},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/GLMMcosinor.html","id":"plotting-cosinor-glmm-objects","dir":"Articles","previous_headings":"","what":"Plotting cosinor.glmm objects","title":"GLMMcosinor","text":"GLMMcosinor package includes two ways visualise cosinor.glmm objects. Firstly, plot() method creates time-response plot fitted model groups:  function also allows users superimpose data (used fit model) fitted model, using superimpose.data = TRUE:  multiple factors model, user can specify covariate plotted using x_str argument accepts string corresponding group name within original data. x_str given user, default grouping variable(s). following examples demonstrate x_str can used produce different plots model;    addition time-response plots, GLMMcosinor package also allows users create polar plots. plots, given component, angle point pole represents acrophase estimate, distance pole point represents amplitude estimate. ellipses represent confidence regions amplitude acrophase.","code":"object <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period =12), data = vitamind) autoplot(object) object <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) autoplot(object, superimpose.data = TRUE) vitamind_new <- vitamind  # Z has 3 levels that aren't associated with outcome vitamind_new$Z <- rbinom(length(vitamind_new$X), 3, prob = 0.5) object <- cosinor.glmm(   Y ~ X + amp_acro(time, n_components = 3, group = c(\"Z\", NA, \"X\"), period = c(12, 10, 8)),   data = vitamind_new ) autoplot(object) # defaults to include all grouping variables (all combinations of X and Z) autoplot(object, x_str = \"X\") # only shows grouping of X (defaults to first level of Z) autoplot(object, x_str = \"Z\") # only shows grouping of Z (defaults to first level of X) polar_plot(object)"},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/data-simulations.html","id":"using-simulate_cosinor-r","dir":"Articles","previous_headings":"","what":"Using: ‘simulate_cosinor.R’","title":"data-simulations","text":"Simulate_cosinor allows users simulate circadian data four distributions: - family = ‘gaussian’ - family = ‘Gamma(link = ’log’)’ - family = ‘binomial’ - family = ‘poisson’ ‘mesor’, ‘amp’, ‘acro’ represent parameters first level, beta.prefix indicates second level can used data visualisation (comparing two groups, example) desired. simulate_cosinor function can simulate multi-component data. , specify vector values parameter inputs (‘amp’ ‘acro’). Note mesor term accepts single-element inputs. Furthermore, ensure ‘n_components’ corresponds length vectors: ‘amp’, ‘acro’, ‘beta.amp’, ‘beta.acro’, ‘period.’ ‘n_period’ number periods simulated. default, maximum period supplied defines upper limit time vector used simulation. Thus, increasing n_periods increases number cycles simulated. another example simulate_cosinor function. cosinor.glmm object also included demonstrate parameter estimates accurately reflect inputs simulate function:","code":"simulate_cosinor(   n = 100,   mesor = 1,   amp = 2,   acro = 1.2,   period = 12,   n_components = 1,   beta.group = TRUE,   beta.mesor = 0.4,   beta.amp = 0.5,   beta.acro = 0.2,   family = c(\"poisson\") ) testdata <- simulate_cosinor(1000,   n_period = 2,   mesor = 7,   amp = c(0.1, 0.4, 0.5),   acro = c(1, 1.5, 0.1),   beta.mesor = 4.4,   beta.amp = c(2, 1, 0.4),   beta.acro = c(1, -1.5, -1),   family = \"poisson\",   period = c(12, 6, 12),   n_components = 3 ) object <- cosinor.glmm(Y ~ group + amp_acro(times,   n_components = 3,   period = c(12, 6, 12),   group = \"group\" ), data = testdata, family = poisson()) summary(object) #>  #>  Conditional Model  #> Raw model coefficients: #>                     estimate standard.error lower.CI upper.CI p.value #> (Intercept)       7.00074878            NaN      NaN      NaN     NaN #> group1           -2.60694938            NaN      NaN      NaN     NaN #> group0:main_rrr1  0.27603599            NaN      NaN      NaN     NaN #> group1:main_rrr1  0.64888334            NaN      NaN      NaN     NaN #> group0:main_sss1 -0.06639257            NaN      NaN      NaN     NaN #> group1:main_sss1 -0.67632675            NaN      NaN      NaN     NaN #> group0:main_rrr2  0.02921756            NaN      NaN      NaN     NaN #> group1:main_rrr2  0.07316848            NaN      NaN      NaN     NaN #> group0:main_sss2 -0.39911566            NaN      NaN      NaN     NaN #> group1:main_sss2  1.00138840            NaN      NaN      NaN     NaN #> group0:main_rrr3  0.27603599            NaN      NaN      NaN     NaN #> group1:main_rrr3  0.64888334            NaN      NaN      NaN     NaN #> group0:main_sss3 -0.06639257            NaN      NaN      NaN     NaN #> group1:main_sss3 -0.67632675            NaN      NaN      NaN     NaN #>  #> Transformed coefficients: #>                  estimate standard.error lower.CI upper.CI p.value #> (Intercept)     7.0007488            NaN      NaN      NaN     NaN #> [group=1]      -2.6069494            NaN      NaN      NaN     NaN #> [group=0]:amp1  0.2839082            NaN      NaN      NaN     NaN #> [group=1]:amp1  0.9372659            NaN      NaN      NaN     NaN #> [group=0]:amp2  0.4001837            NaN      NaN      NaN     NaN #> [group=1]:amp2  1.0040579            NaN      NaN      NaN     NaN #> [group=0]:amp3  0.2839082            NaN      NaN      NaN     NaN #> [group=1]:amp3  0.9372659            NaN      NaN      NaN     NaN #> [group=0]:acr1  0.2360379            NaN      NaN      NaN     NaN #> [group=1]:acr1  0.8061039            NaN      NaN      NaN     NaN #> [group=0]:acr2  1.4977209            NaN      NaN      NaN     NaN #> [group=1]:acr2 -1.4978589            NaN      NaN      NaN     NaN #> [group=0]:acr3  0.2360379            NaN      NaN      NaN     NaN #> [group=1]:acr3  0.8061039            NaN      NaN      NaN     NaN autoplot(object, superimpose.data = TRUE, x_str = \"group\", predict.ribbon = FALSE)"},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/model-specification.html","id":"using-cosinor-glmm-r","dir":"Articles","previous_headings":"","what":"Using: ‘cosinor.glmm.R’","title":"model-specification","text":"cosinor.glmm() generates regression model parameter estimates based data set formula specified user. formula argument cosinor.glmm() constructed two parts: Firstly: specification intercept covariate mesor terms. default, intercept term included can removed including 0 formula. example, following formula intercept X listed covariate mesor term: Alternatively, following example intercept term, still generate mesor estimate X group. output, [X=0] [X=1] refer estimates mesor levels 0 1 respectively within group “X”. Finally, following intercept term, generate mesor estimates: Secondly, specification amp_acro() function. amp_acro() function modifies original dataset formula amplitude acrophase can calculated. Importantly, amp_acro() argument users specify: ‘group’ (name group covariates). Ensure names argument actually found dataset. group argument can object string. ‘time’ (name time column). Ensure name matches name time values dataset. ‘time’ argument can object string. ‘n_components’ (number components). user wishes one trigonometric component model, can specify number components . Note value need match length group argument period argument. example, n_components = 3, group argument 3 characters, position character corresponds component group covariate describes: demonstrated example , ‘NA’ entry group argument indicates component group covariate assigned. one group argument /one period argument supplied, one component specified, assumed one group one period specified applies components: instance, following two cosinor.glmm() calls produce output:","code":"data(vitamind) cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + X:main_rrr1 + X:main_sss1  #>  #>  Raw Coefficients:  #>              Estimate #> (Intercept)  29.68980 #> X1            1.90186 #> X0:main_rrr1  0.93079 #> X1:main_rrr1  6.51029 #> X0:main_sss1  6.20099 #> X1:main_sss1  4.81846 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 29.68980 #> [X=1]        1.90186 #> [X=0]:amp    6.27046 #> [X=1]:amp    8.09947 #> [X=0]:acr   -1.42181 #> [X=1]:acr   -0.63715 cosinor.glmm(Y ~ 0 + X + amp_acro(time, group = \"X\", period = 12), data = vitamind) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + X:main_rrr1 + X:main_sss1 - 1  #>  #>  Raw Coefficients:  #>              Estimate #> X0           29.68980 #> X1           31.59165 #> X0:main_rrr1  0.93079 #> X1:main_rrr1  6.51029 #> X0:main_sss1  6.20101 #> X1:main_sss1  4.81847 #>  #>  Transformed Coefficients:  #>           Estimate #> [X=0]     29.68980 #> [X=1]     31.59165 #> [X=0]:amp  6.27048 #> [X=1]:amp  8.09948 #> [X=0]:acr -1.42181 #> [X=1]:acr -0.63716 cosinor.glmm(Y ~ 0 + amp_acro(time, group = \"X\", period = 12), data = vitamind) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X:main_rrr1 + X:main_sss1 - 1  #>  #>  Raw Coefficients:  #>              Estimate #> X0:main_rrr1  3.98682 #> X1:main_rrr1  5.66053 #> X0:main_sss1  4.17943 #> X1:main_sss1  1.03582 #>  #>  Transformed Coefficients:  #>           Estimate #> [X=0]:amp  5.77602 #> [X=1]:amp  5.75452 #> [X=0]:acr -0.80898 #> [X=1]:acr -0.18099 data(vitamind) vitamind$Z <- rbinom(length(vitamind$X), 1, prob = 0.5) cosinor.glmm(Y ~ X + amp_acro(time, n_components = 3, group = c(\"X\", NA, \"Z\"), period = c(12, 10, 8)), data = vitamind) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + main_rrr2 + main_sss2 + X:main_rrr1 + X:main_sss1 + Z:main_rrr3 +      Z:main_sss3  #>  #>  Raw Coefficients:  #>               Estimate #> (Intercept)   31.29334 #> X1             1.93736 #> main_rrr2    -17.02606 #> main_sss2     -3.54690 #> X0:main_rrr1  14.05489 #> X1:main_rrr1  19.59624 #> X0:main_sss1   1.56801 #> X1:main_sss1   0.18074 #> Z0:main_rrr3   2.44854 #> Z1:main_rrr3   3.13182 #> Z0:main_sss3   4.06181 #> Z1:main_sss3   4.10308 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 31.29334 #> [X=1]        1.93736 #> [X=0]:amp1  14.14209 #> [X=1]:amp1  19.59708 #> amp2        17.39158 #> [Z=0]:amp3   4.74275 #> [Z=1]:amp3   5.16174 #> [X=0]:acr1  -0.11110 #> [X=1]:acr1  -0.00922 #> acr2         2.93621 #> [Z=0]:acr3  -1.02831 #> [Z=1]:acr3  -0.91885 cosinor.glmm(Y ~ X + amp_acro(time, n_components = 3, group = \"X\", period = c(12)), data = vitamind) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + X:main_rrr1 + X:main_sss1 + X:main_rrr2 + X:main_sss2 +      X:main_rrr3 + X:main_sss3  #>  #>  Raw Coefficients:  #>              Estimate #> (Intercept)  29.68979 #> X1            1.90186 #> X0:main_rrr1  0.31026 #> X1:main_rrr1  2.17010 #> X0:main_sss1  2.06700 #> X1:main_sss1  1.60615 #> X0:main_rrr2  0.31026 #> X1:main_rrr2  2.17010 #> X0:main_sss2  2.06700 #> X1:main_sss2  1.60615 #> X0:main_rrr3  0.31026 #> X1:main_rrr3  2.17010 #> X0:main_sss3  2.06700 #> X1:main_sss3  1.60615 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 29.68979 #> [X=1]        1.90186 #> [X=0]:amp1   2.09015 #> [X=1]:amp1   2.69982 #> [X=0]:amp2   2.09015 #> [X=1]:amp2   2.69982 #> [X=0]:amp3   2.09015 #> [X=1]:amp3   2.69982 #> [X=0]:acr1  -1.42181 #> [X=1]:acr1  -0.63715 #> [X=0]:acr2  -1.42181 #> [X=1]:acr2  -0.63715 #> [X=0]:acr3  -1.42181 #> [X=1]:acr3  -0.63715 cosinor.glmm(Y ~ X + amp_acro(time, n_components = 3, group = c(\"X\", \"X\", \"X\"), period = c(12, 12, 12)), data = vitamind) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + X:main_rrr1 + X:main_sss1 + X:main_rrr2 + X:main_sss2 +      X:main_rrr3 + X:main_sss3  #>  #>  Raw Coefficients:  #>              Estimate #> (Intercept)  29.68979 #> X1            1.90186 #> X0:main_rrr1  0.31026 #> X1:main_rrr1  2.17010 #> X0:main_sss1  2.06700 #> X1:main_sss1  1.60615 #> X0:main_rrr2  0.31026 #> X1:main_rrr2  2.17010 #> X0:main_sss2  2.06700 #> X1:main_sss2  1.60615 #> X0:main_rrr3  0.31026 #> X1:main_rrr3  2.17010 #> X0:main_sss3  2.06700 #> X1:main_sss3  1.60615 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 29.68979 #> [X=1]        1.90186 #> [X=0]:amp1   2.09015 #> [X=1]:amp1   2.69982 #> [X=0]:amp2   2.09015 #> [X=1]:amp2   2.69982 #> [X=0]:amp3   2.09015 #> [X=1]:amp3   2.69982 #> [X=0]:acr1  -1.42181 #> [X=1]:acr1  -0.63715 #> [X=0]:acr2  -1.42181 #> [X=1]:acr2  -0.63715 #> [X=0]:acr3  -1.42181 #> [X=1]:acr3  -0.63715"},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/model-specification.html","id":"dispersion-and-zero-inflation-model-specification","dir":"Articles","previous_headings":"Using: ‘cosinor.glmm.R’","what":"Dispersion and zero-inflation model specification","title":"model-specification","text":"cosinor.glmm() function optionally allows users specify formulas dispersion zero-inflation models. formulas independent main formula specification: example shows dispformula ziformula can specified different number components, different periods, different group-component assignments. default, dispformula = ~1, ziformula = ~0. Note example , value periods number components dispersion zero-inflation formulas chosen arbitrarily purely demonstration.","code":"testdata <- simulate_cosinor(1000, n_period = 6,   mesor = 7,   amp = c(0.1, 0.4, 0.5),   acro = c(1, 1.5, 0.1),   beta.mesor = 4.4,   beta.amp = c(2, 1, 0.4),   beta.acro = c(1, -1.5, -1),   family = \"gaussian\",   period = c(12, 6, 8),   n_components = 3 ) object <- cosinor.glmm(Y ~ group + amp_acro(times,   n_components = 3,   period = c(12, 6, 8),   group = \"group\" ), data = testdata, family = gaussian(),    dispformula = ~ group + amp_acro(times, n_components = 2, group = \"group\", period = c(12,6)),    ziformula = ~ group + amp_acro(times, n_components = 3, group = \"group\", period = c(7,8,2)) )  object #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ group + group:main_rrr1 + group:main_sss1 + group:main_rrr2 +      group:main_sss2 + group:main_rrr3 + group:main_sss3  #>  #>  Raw Coefficients:  #>                  Estimate #> (Intercept)       6.92715 #> group1           -2.54650 #> group0:main_rrr1  0.01220 #> group1:main_rrr1  1.11069 #> group0:main_sss1 -0.08262 #> group1:main_sss1 -1.63847 #> group0:main_rrr2  0.05510 #> group1:main_rrr2  0.12398 #> group0:main_sss2 -0.39352 #> group1:main_sss2  0.96637 #> group0:main_rrr3  0.47917 #> group1:main_rrr3  0.23961 #> group0:main_sss3 -0.01141 #> group1:main_sss3  0.31425 #>  #>  Transformed Coefficients:  #>                Estimate #> (Intercept)     6.92715 #> [group=1]      -2.54650 #> [group=0]:amp1  0.08351 #> [group=1]:amp1  1.97945 #> [group=0]:amp2  0.39736 #> [group=1]:amp2  0.97429 #> [group=0]:amp3  0.47931 #> [group=1]:amp3  0.39518 #> [group=0]:acr1  1.42423 #> [group=1]:acr1  0.97507 #> [group=0]:acr2  1.43168 #> [group=1]:acr2 -1.44320 #> [group=0]:acr3  0.02380 #> [group=1]:acr3 -0.91935 #>  #> *********************** #>  #>  Dispersion Model  #>  #>  Raw  Formula:  #> ~group + group:disp_rrr1 + group:disp_sss1 + group:disp_rrr2 +      group:disp_sss2  #>  #>  Raw  Coefficients:  #>                  Estimate #> (Intercept)       0.02952 #> group1           -0.02289 #> group0:disp_rrr1 -0.04964 #> group1:disp_rrr1  0.12375 #> group0:disp_sss1 -0.01889 #> group1:disp_sss1  0.10120 #> group0:disp_rrr2 -0.12152 #> group1:disp_rrr2 -0.14979 #> group0:disp_sss2  0.03972 #> group1:disp_sss2 -0.03571 #>  #>  Transformed  Coefficients:  #>                Estimate #> (Intercept)     0.02952 #> [group=1]      -0.02289 #> [group=0]:amp1  0.05311 #> [group=1]:amp1  0.15986 #> [group=0]:amp2  0.12784 #> [group=1]:amp2  0.15399 #> [group=0]:acr1  2.77789 #> [group=1]:acr1 -0.68545 #> [group=0]:acr2 -2.82569 #> [group=1]:acr2  2.90759 #>  #> *********************** #>  #>  Zero-Inflation Model  #>  #>  Raw  Formula:  #> ~group + group:zi_rrr1 + group:zi_sss1 + group:zi_rrr2 + group:zi_sss2 +      group:zi_rrr3 + group:zi_sss3  #>  #>  Raw  Coefficients:  #>                 Estimate #> (Intercept)    -22.73654 #> group1          -0.04179 #> group0:zi_rrr1  -0.01052 #> group1:zi_rrr1   0.00865 #> group0:zi_sss1  -0.03461 #> group1:zi_sss1   0.04719 #> group0:zi_rrr2  -0.00115 #> group1:zi_rrr2  -0.00981 #> group0:zi_sss2  -0.00135 #> group1:zi_sss2  -0.00204 #> group0:zi_rrr3   0.00677 #> group1:zi_rrr3  -0.00945 #> group0:zi_sss3   0.03605 #> group1:zi_sss3  -0.04672 #>  #>  Transformed  Coefficients:  #>                 Estimate #> (Intercept)    -22.73654 #> [group=1]       -0.04179 #> [group=0]:amp1   0.03617 #> [group=1]:amp1   0.04798 #> [group=0]:amp2   0.00177 #> [group=1]:amp2   0.01003 #> [group=0]:amp3   0.03668 #> [group=1]:amp3   0.04766 #> [group=0]:acr1   1.86597 #> [group=1]:acr1  -1.38944 #> [group=0]:acr2   2.27337 #> [group=1]:acr2   2.93644 #> [group=0]:acr3  -1.38514 #> [group=1]:acr3   1.77048"},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/model-specification.html","id":"using-summary-cosinor-glmm-r","dir":"Articles","previous_headings":"","what":"Using: ‘summary.cosinor.glmm.R’","title":"model-specification","text":"summary.cosinor.glmm() function provides summary statistics object produced cosinor.glmm() function. outputs estimates, confidence intervals, tests raw parameters transformed (mesor, amplitude, acrophase) parameters. Currently, summary statistics represent comparison groups - role test_cosinor() function. example use summary.cosinor.glmm() function: summary statistics dispersion zero-inflation models also provided summary.cosinor.glmm() function, original cosinor.glmm object analysed contains :","code":"data(vitamind) object <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) summary(object) #>  #>  Conditional Model  #> Raw model coefficients: #>                estimate standard.error   lower.CI upper.CI    p.value     #> (Intercept)  29.6897959      0.4583696 28.7914079 30.58818 < 2.22e-16 *** #> X1            1.9018623      0.7919688  0.3496320  3.45409   0.016331 *   #> X0:main_rrr1  0.9307876      0.6260656 -0.2962784  2.15785   0.137087     #> X1:main_rrr1  6.5102900      0.9303406  4.6868560  8.33372 2.6011e-12 *** #> X0:main_sss1  6.2009896      0.6701952  4.8874311  7.51455 < 2.22e-16 *** #> X1:main_sss1  4.8184618      0.8963299  3.0616875  6.57524 7.6257e-08 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Transformed coefficients: #>                estimate standard.error    lower.CI upper.CI    p.value     #> (Intercept) 29.68979587     0.45836964 28.79140787 30.58818 < 2.22e-16 *** #> [X=1]        1.90186227     0.79196879  0.34963197  3.45409   0.016331 *   #> [X=0]:amp1   6.27045757     0.66965642  4.95795510  7.58296 < 2.22e-16 *** #> [X=1]:amp1   8.09947222     1.10283566  5.93795403 10.26099 2.0696e-13 *** #> [X=0]:acr1  -1.42180558     0.09993559 -1.61767574 -1.22594 < 2.22e-16 *** #> [X=1]:acr1  -0.63715441     0.14043625 -0.91240440 -0.36190 5.7069e-06 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 data(vitamind) # load vitamind dataset vitamind$Z <- rbinom(length(vitamind$X), 2, prob = 0.5) # modify dataset  object <- cosinor.glmm(Y ~ X + amp_acro(time, n_components = 3, group = c(\"X\", NA, \"Z\"), period = c(12, 10, 8)),   data = vitamind,   dispformula = ~ X + amp_acro(time, n_components = 3, group = c(\"Z\", NA, \"X\"), period = c(12, 11, 8)),   ziformula = ~ X + amp_acro(time, n_components = 2, group = c(\"Z\", \"X\"), period = c(12, 8)) )  summary(object) #>  #>  Conditional Model  #> Raw model coefficients: #>                 estimate standard.error    lower.CI upper.CI  p.value     #> (Intercept)   31.3154990      3.0464169  25.3446316 37.28637  < 2e-16 *** #> X1             1.9111762      0.7949306   0.3531408  3.46921 0.016208 *   #> main_rrr2    -17.3512428     28.3762126 -72.9675975 38.26511 0.540888     #> main_sss2     -1.3251616     21.7894275 -44.0316546 41.38133 0.951505     #> X0:main_rrr1  13.8968579     26.5663249 -38.1721821 65.96590 0.600904     #> X1:main_rrr1  19.2981089     26.6437780 -32.9227363 71.51895 0.468881     #> X0:main_sss1  -0.1221164      6.3589738 -12.5854760 12.34124 0.984679     #> X1:main_sss1  -1.1534071      6.4609136 -13.8165650 11.50975 0.858314     #> Z0:main_rrr3   3.8554339      4.4991626  -4.9627628 12.67363 0.391488     #> Z1:main_rrr3   2.9879801      4.5416737  -5.9135367 11.88950 0.510601     #> Z2:main_rrr3   3.2264055      4.4637985  -5.5224789 11.97529 0.469807     #> Z0:main_sss3   2.5428404     11.2659848 -19.5380841 24.62376 0.821427     #> Z1:main_sss3   3.9169766     11.1782828 -17.9920550 25.82601 0.726031     #> Z2:main_sss3   3.1160806     11.1706965 -18.7780823 25.01024 0.780282     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Transformed coefficients: #>                  estimate standard.error      lower.CI upper.CI    p.value     #> (Intercept)  31.315498992    3.046416913  25.344631561 37.28637 < 2.22e-16 *** #> [X=1]         1.911176227    0.794930616   0.353140849  3.46921  0.0162077 *   #> amp2         17.401772283   29.681395128 -40.772693178 75.57624  0.5576837     #> [X=0]:amp1   13.897394429    6.006629607   2.124616730 25.67017  0.0206855 *   #> [X=1]:amp1   19.332546547    5.947290062   7.676072219 30.98902  0.0011514 **  #> [Z=0]:amp3    4.618485447   28.400998800 -51.046449325 60.28342  0.8708200     #> [Z=1]:amp3    4.926533400   24.732699481 -43.548666824 53.40173  0.8421133     #> [Z=2]:amp3    4.485493311   26.801898832 -48.045263117 57.01625  0.8670889     #> acr2          3.065367906    1.147875544   0.815573181  5.31516  0.0075745 **  #> [X=0]:acr1    0.008787115    1.468724999  -2.869860986  2.88744  0.9952264     #> [X=1]:acr1    0.059696865    1.049224802  -1.996745959  2.11614  0.9546279     #> [Z=0]:acr3   -0.583057480    2.391034710  -5.269399398  4.10328  0.8073458     #> [Z=1]:acr3   -0.919135611    3.594367095  -7.963965664  6.12569  0.7981705     #> [Z=2]:acr3   -0.768005334    3.264463919  -7.166237044  5.63023  0.8140051     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> *********************** #>  #>  Dispersion Model  #> Raw model coefficients: #>                 estimate standard.error    lower.CI upper.CI  p.value   #> (Intercept)    2.5505020      1.2391806   0.1217528  4.97925 0.039569 * #> X1             0.2628391      0.2569404  -0.2407548  0.76643 0.306328   #> disp_rrr2      7.8936641     21.8578677 -34.9469695 50.73430 0.717998   #> disp_sss2     10.8415194      6.8859668  -2.6547276 24.33777 0.115387   #> Z0:disp_rrr1  -9.7732329     20.7753000 -50.4920727 30.94561 0.638051   #> Z1:disp_rrr1  -9.5539446     20.7155767 -50.1557288 31.04784 0.644658   #> Z2:disp_rrr1  -9.1432378     20.7285647 -49.7704781 31.48400 0.659145   #> Z0:disp_sss1  -6.3396880      4.6743262 -15.5011990  2.82182 0.175011   #> Z1:disp_sss1  -7.1959393      4.7057578 -16.4190551  2.02718 0.126220   #> Z2:disp_sss1  -6.8420307      4.7131228 -16.0795818  2.39552 0.146586   #> X0:disp_rrr3   1.8851689      1.1139241  -0.2980822  4.06842 0.090576 . #> X1:disp_rrr3   1.4729200      1.0771248  -0.6382057  3.58405 0.171483   #> X0:disp_sss3  -1.3934218      2.8908273  -7.0593392  4.27250 0.629795   #> X1:disp_sss3  -1.7463744      2.9229818  -7.4753135  3.98256 0.550198   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Transformed coefficients: #>                estimate standard.error    lower.CI upper.CI    p.value     #> (Intercept)   2.5505020      1.2391806   0.1217528  4.97925  0.0395693 *   #> [X=1]         0.2628391      0.2569404  -0.2407548  0.76643  0.3063280     #> amp2         13.4107597     16.8966588 -19.7060831 46.52760  0.4273742     #> [Z=0]:amp1   11.6493659      4.2747294   3.2710502 20.02768  0.0064268 **  #> [Z=1]:amp1   11.9607441      4.5963834   2.9519982 20.96949  0.0092626 **  #> [Z=2]:amp1   11.4198153      4.5848826   2.4336106 20.40602  0.0127472 *   #> [X=0]:amp3    2.3442453     16.5707639 -30.1338552 34.82235  0.8874996     #> [X=1]:amp3    2.2845824     13.2389062 -23.6631969 28.23236  0.8629927     #> acr2         -0.9414620      1.1544305  -3.2041043  1.32118  0.4147743     #> [Z=0]:acr1    2.5661469      0.4062392   1.7699327  3.36236 2.6697e-10 *** #> [Z=1]:acr1    2.4960528      0.3685919   1.7736260  3.21848 1.2714e-11 *** #> [Z=2]:acr1    2.4991702      0.3886306   1.7374683  3.26087 1.2701e-10 *** #> [X=0]:acr3    0.6365206      6.2656942 -11.6440143 12.91706  0.9190835     #> [X=1]:acr3    0.8701371      7.8027840 -14.4230386 16.16331  0.9112070     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> *********************** #>  #>  Zero-Inflation Model  #> Raw model coefficients: #>                  estimate standard.error      lower.CI upper.CI p.value #> (Intercept) -1.358880e+01   8.468466e+01 -1.795677e+02 152.3901 0.87252 #> X1          -6.868324e-01   1.850083e+02 -3.632965e+02 361.9228 0.99704 #> Z0:zi_rrr1   2.732393e-01   2.333345e+02 -4.570539e+02 457.6004 0.99907 #> Z1:zi_rrr1   1.519577e-01   1.996432e+02 -3.911415e+02 391.4455 0.99939 #> Z2:zi_rrr1   2.206423e-01   2.365668e+02 -4.634417e+02 463.8830 0.99926 #> Z0:zi_sss1   5.614358e-02   2.027825e+02 -3.973902e+02 397.5025 0.99978 #> Z1:zi_sss1  -2.307760e-03   1.814199e+02 -3.555787e+02 355.5741 0.99999 #> Z2:zi_sss1   3.925383e-02   2.063473e+02 -4.043940e+02 404.4725 0.99985 #> X0:zi_rrr2   6.210771e-03   1.259003e+02 -2.467539e+02 246.7663 0.99996 #> X1:zi_rrr2  -1.407601e-02   2.351586e+02 -4.609164e+02 460.8882 0.99995 #> X0:zi_sss2  -3.865255e-01   1.944596e+02 -3.815203e+02 380.7472 0.99841 #> X1:zi_sss2  -2.536689e-01   2.748129e+02 -5.388770e+02 538.3697 0.99926 #>  #> Transformed coefficients: #>                  estimate standard.error      lower.CI  upper.CI p.value #> (Intercept) -1.358880e+01   8.468466e+01 -1.795677e+02  152.3901 0.87252 #> [X=1]       -6.868325e-01   1.850083e+02 -3.632965e+02  361.9228 0.99704 #> [Z=0]:amp1   2.789476e-01   2.317292e+02 -4.539020e+02  454.4599 0.99904 #> [Z=1]:amp1   1.519752e-01   3.696165e+02 -7.242830e+02  724.5870 0.99967 #> [Z=2]:amp1   2.241068e-01   3.952520e+02 -7.744557e+02  774.9039 0.99955 #> [X=0]:amp2   3.865753e-01   2.820994e+02 -5.525181e+02  553.2913 0.99891 #> [X=1]:amp2   2.540592e-01   3.455097e+02 -6.769324e+02  677.4405 0.99941 #> [Z=0]:acr1  -2.026535e-01   7.335244e+02 -1.437884e+03 1437.4788 0.99978 #> [Z=1]:acr1   1.518569e-02   1.844540e+03 -3.615217e+03 3615.2474 0.99999 #> [Z=2]:acr1  -1.760650e-01   1.329431e+03 -2.605813e+03 2605.4605 0.99989 #> [X=0]:acr2   1.554730e+00   6.910663e+02 -1.352910e+03 1356.0198 0.99820 #> [X=1]:acr2   1.626229e+00   1.337881e+03 -2.620572e+03 2623.8248 0.99903"},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/model-specification.html","id":"using-predict-cosinor-glmm-r","dir":"Articles","previous_headings":"","what":"Using: ‘predict.cosinor.glmm.R’","title":"model-specification","text":"predict.cosinor.glmm() function allows users generate predicted values given time variable optional covariates. used plot.cosinor.glmm() function generate fitted line based acosinor.glmm object.","code":"data(vitamind) fit <- cosinor.glmm(Y ~ X + amp_acro(X, group = NA, period = 12), data = vitamind) df_predicted <- predict(fit, newdata = vitamind)"},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/model-visualisations.html","id":"plotting-cosinor-glmm-objects","dir":"Articles","previous_headings":"","what":"Plotting cosinor.glmm objects","title":"model-visualisations","text":"GLMMcosinor package includes two ways visualise cosinor.glmm objects. Firstly, function ggplot.cosinor.glmm() creates time-response plot fitted model:  function also allows users superimpose datapoints (fit based ) fitted model, using superimpose.data = TRUE argument:  multiple factors model, user can specify covariate plotted using x_str argument accepts string corresponding group name within original dataset. default, x_str = NULL intercept plotted (group levels = 0). following examples demonstrate x_str can used produce different plots model;","code":"object <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) autoplot(object, x_str = \"X\") object <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) autoplot(object, x_str = \"X\", superimpose.data = TRUE) data(vitamind) vitamind$Z <- rbinom(length(vitamind$X), 3, prob = 0.5) object <- cosinor.glmm(Y ~ X + amp_acro(time, n_components = 3, group = c(\"Z\", NA, \"X\"), period = c(12, 10, 8)), data = vitamind) autoplot(object) data(vitamind) vitamind$Z <- rbinom(length(vitamind$X), 3, prob = 0.5) object <- cosinor.glmm(Y ~ X + amp_acro(time, n_components = 3, group = c(\"Z\", NA, \"X\"), period = c(12, 10, 8)), data = vitamind) autoplot(object, x_str = \"X\") data(vitamind) vitamind$Z <- rbinom(length(vitamind$X), 3, prob = 0.5) object <- cosinor.glmm(Y ~ X + amp_acro(time, n_components = 3, group = c(\"Z\", NA, \"X\"), period = c(12, 10, 8)), data = vitamind) autoplot(object, x_str = \"Z\")"},{"path":"https://rwparsons.github.io/GLMMcosinor/articles/model-visualisations.html","id":"polar-plots","dir":"Articles","previous_headings":"","what":"Polar plots","title":"model-visualisations","text":"angle units plot can specified radial_units argument. default, units radians complete revolution plot \\((2\\pi)\\) represents period component. units can changed degrees (\\(360^\\circ\\) represents period), even expressed units period specification time variable data used fit model. default, function creates polar plots components combines together using make_cowplot = TRUE argument. user wishes plot just one component, can specify using component_index, though making make_cowplot = FALSE. direction angle increases can changed clockwise argument, location angle = 0 starting point can specified start argument. Hence, user wishes create polar plot resembles clock, can done specifying clockwise = TRUE start = \"top\". argument: overlay_parameter_info can used create line extending origin parameter estimate (visualise amplitude estimate), circular arc extending angle starting position (0) acrophase estimate. background grid can also customised. argument grid_angle_segments used specify many sectors polar grid , ‘contour_interval’ argument can used specify distance adjacent radial circles. user wishes zoom confidence ellipses show relevant information, can adjust view default full (plots full view polar plot) ‘zoom’ (enlarges smallest view window containing confidence ellipses), zoom_origin (enlarges smallest view window containing confidence ellipses origin). addition time-response plots, GLMMcosinor package also allows users create polar plots. plots, plotted point represents acrophase estimate, radius represents amplitude estimate given component. ellipses represent confidence regions.  angle units plot can specified ‘radial_units’ argument. default, units radians complete revolution plot (2*pi) represents maximum period model. units can changed degrees, even expressed units period specification.  default, function creates creates polar plots components stiches together using make_cowplot = TRUE argument. user wishes plot just one component, can specify using ‘component_index’, though ‘make_cowplot’ argument must FALSE register. direction angle increases can changed clockwise argument, location angle = 0 starting point can specified ‘start’ argument. Hence, user wishes create polar plot resembles clock, can done specifying clockwise = TRUE start = “top”. argument: overlay_parameter_info can used create line extending origin parameter estimate (visualise amplitude estimate), circular arc extending angle starting position (0) acrophase estimate.  background grid can also customised. argument ‘grid_angle_segments’ used specify many sectors polar grid , ‘contour_interval’ argument can used specify distance adjacent radial circles.  user wishes zoom confidence ellipses show releveant information, can adjust view default ‘full’ (plots full view polar plot) ‘zoom’ (enlarges smallest view window containing confidence ellipses), ‘zoom_origin’ (enlarges smallest view window containing confidence ellipses origin).","code":"model <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) polar_plot(model) model <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period =12), data = vitamind) polar_plot(model, radial_units = \"degrees\") model <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) polar_plot(model, overlay_parameter_info = TRUE) model <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) polar_plot(model, grid_angle_segments = 12, clockwise = TRUE, start = \"top\", contour_interval = 1) model <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) polar_plot(model,   grid_angle_segments = 12, clockwise = TRUE, start = \"top\",   view = \"zoom_origin\" )"},{"path":"https://rwparsons.github.io/GLMMcosinor/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rex Parsons. Author, maintainer. Oliver Jayasinghe. Author.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Parsons R, Jayasinghe O (2023). GLMMcosinor: Fit cosinor model using generalised mixed modelling framework. https://github.com/RWParsons/GLMMcosinor, https://rwparsons.github.io/GLMMcosinor/.","code":"@Manual{,   title = {GLMMcosinor: Fit a cosinor model using a generalised mixed modelling framework},   author = {Rex Parsons and Oliver Jayasinghe},   year = {2023},   note = {https://github.com/RWParsons/GLMMcosinor, https://rwparsons.github.io/GLMMcosinor/}, }"},{"path":"https://rwparsons.github.io/GLMMcosinor/index.html","id":"glmmcosinor","dir":"","previous_headings":"","what":"Fit a cosinor model using a generalised mixed modelling framework","title":"Fit a cosinor model using a generalised mixed modelling framework","text":"goal GLMMcosinor fit cosinor model rhythmic data allow functionality generalised linear (mixed-) model (GLM) framework using glmmTMB. example, includes ability use link functions appropriate outcome variables Gaussian, Poisson, Gamma, Binomial. Existing statistical software circadian data analyses (including cosinor circacompare) allow user fit data using regression model, many limited due lack able specify link function, multiple components, heirachical structure. GLMMcosinor aims comprehensive flexible improvement implementations cosinor model R Python. See table features available within currently available methods.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fit a cosinor model using a generalised mixed modelling framework","text":"can install development version GLMMcosinor GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"RWParsons/GLMMcosinor\")"},{"path":"https://rwparsons.github.io/GLMMcosinor/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Fit a cosinor model using a generalised mixed modelling framework","text":"basic example shows solve common problem:","code":"library(GLMMcosinor) data(vitamind) model <- cosinor.glmm(Y ~ X + amp.acro(time, group = \"X\"), data = vitamind) summary(model) #>  #>  Conditional Model  #> Raw model coefficients: #>                estimate standard.error   lower.CI  upper.CI   p.value #> (Intercept)  29.6897959      0.4583696 28.7914079 30.588184 0.0000000 #> X1            1.9018623      0.7919688  0.3496320  3.454093 0.0163309 #> X0:main_rrr1  0.9307876      0.6260656 -0.2962784  2.157853 0.1370874 #> X1:main_rrr1  6.5102900      0.9303406  4.6868560  8.333724 0.0000000 #> X0:main_sss1  6.2009896      0.6701952  4.8874311  7.514548 0.0000000 #> X1:main_sss1  4.8184618      0.8963299  3.0616875  6.575236 0.0000001 #>  #> Transformed coefficients: #>               estimate standard.error   lower.CI   upper.CI   p.value #> (Intercept) 29.6897959      0.4583696 28.7914079 30.5881839 0.0000000 #> [X=1]        1.9018623      0.7919688  0.3496320  3.4540926 0.0163309 #> [X=0]:amp1   6.2704576      0.6696564  4.9579551  7.5829600 0.0000000 #> [X=1]:amp1   8.0994722      1.1028357  5.9379540 10.2609904 0.0000000 #> [X=0]:acr1  -1.4218056      0.0999356 -1.6176757 -1.2259354 0.0000000 #> [X=1]:acr1  -0.6371544      0.1404362 -0.9124044 -0.3619044 0.0000057 plot(model, superimpose.data = TRUE) polar_plot(model)"},{"path":"https://rwparsons.github.io/GLMMcosinor/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Fit a cosinor model using a generalised mixed modelling framework","text":"","code":"citation(\"GLMMcosinor\") #> To cite package 'GLMMcosinor' in publications use: #>  #>   Parsons R, Jayasinghe O (2023). _GLMMcosinor: Fit a cosinor model #>   using a generalised mixed modelling framework_. #>   https://github.com/RWParsons/GLMMcosinor, #>   https://rwparsons.github.io/GLMMcosinor/. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {GLMMcosinor: Fit a cosinor model using a generalised mixed modelling #> framework}, #>     author = {Rex Parsons and Oliver Jayasinghe}, #>     year = {2023}, #>     note = {https://github.com/RWParsons/GLMMcosinor, #> https://rwparsons.github.io/GLMMcosinor/}, #>   }"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/GLMMCosinor.html","id":null,"dir":"Reference","previous_headings":"","what":"GLMMcosinor: A package for fitting generalized linear mixed-effects models with cosinor terms — GLMMCosinor","title":"GLMMcosinor: A package for fitting generalized linear mixed-effects models with cosinor terms — GLMMCosinor","text":"package provides functions fitting generalized linear mixed-effects models cosinor terms. Cosinor terms can used model periodic variations time series data, particularly useful chronobiology sleep research. package uses flexible GLMMtmb framework allows users specify wide range data families, provides tools visualization.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/GLMMcosinor-package.html","id":null,"dir":"Reference","previous_headings":"","what":"GLMMcosinor: Fit a cosinor model using a generalised mixed modelling framework — GLMMcosinor-package","title":"GLMMcosinor: Fit a cosinor model using a generalised mixed modelling framework — GLMMcosinor-package","text":"learn use GLMMcosinor, see vignettes website using following code: browseVignettes(package = \"GLMMcosinor\")","code":""},{"path":[]},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/GLMMcosinor-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"GLMMcosinor: Fit a cosinor model using a generalised mixed modelling framework — GLMMcosinor-package","text":"Maintainer: Rex Parsons rex.parsons94@gmail.com (ORCID) Authors: Oliver Jayasinghe","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/amp_acro.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the validity of user inputs and creates formula and modifies dataframe — amp_acro","title":"Checks the validity of user inputs and creates formula and modifies dataframe — amp_acro","text":"Checks validity user inputs creates formula modifies dataframe","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/amp_acro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the validity of user inputs and creates formula and modifies dataframe — amp_acro","text":"","code":"amp_acro(time_col, n_components = 1, group, period, ...)"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/amp_acro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the validity of user inputs and creates formula and modifies dataframe — amp_acro","text":"time_col column time values dataframe n_components number components model group vector names group factors. levels factor ordered, first level factor reference level period period component ... extra arguments controlled GLMMcosinor.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/amp_acro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the validity of user inputs and creates formula and modifies dataframe — amp_acro","text":"updated dataframe formula processed data_processor()","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/autoplot.cosinor.glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a cosinor model — autoplot.cosinor.glmm","title":"Plot a cosinor model — autoplot.cosinor.glmm","text":"Given cosinor.glmm model fit, generate plot data fitted values. Optionally allows plotting covariates","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/autoplot.cosinor.glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a cosinor model — autoplot.cosinor.glmm","text":"","code":"# S3 method for cosinor.glmm autoplot(   object,   ci_level = 0.95,   x_str,   type = \"response\",   xlims,   pred.length.out = 200,   superimpose.data = FALSE,   data_opacity = 0.3,   predict.ribbon = TRUE,   ... )"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/autoplot.cosinor.glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a cosinor model — autoplot.cosinor.glmm","text":"object cosinor.glmm object. ci_level level calculated confidence intervals. Defaults 0.95. x_str Character vector naming covariate(s) plotted. Default value plots groups type Character passed argument predict.cosinor.glmm() function, specifying type prediction (e.g, \"response\", \"link\") xlims vector length two containing lower upper x limit plotted pred.length.integer value specifies number predicted datapoints. larger value, smooth fit appear superimpose.data logical argument (TRUE FALSE). TRUE, data original cosinor.glmm() object superimposed predicted fit data_opacity number bewteen 0 1 inclusive controls opacity superimposed data predict.ribbon logical argument (TRUE FALSE). TRUE, prediction interval plotted ... Additional, ignored arguments.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/autoplot.cosinor.glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a cosinor model — autoplot.cosinor.glmm","text":"Returns ggplot graphics object.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/autoplot.cosinor.glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a cosinor model — autoplot.cosinor.glmm","text":"","code":"model <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) #> Warning: Package version inconsistency detected. #> TMB was built with Matrix version 1.5.4.1 #> Current Matrix version is 1.5.4 #> Please re-install 'TMB' from source using install.packages('TMB', type = 'source') or ask CRAN for a binary version of 'TMB' matching CRAN's 'Matrix' package autoplot(model, x_str = \"X\")"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/cosinor.glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit cosinor model with {glmmTMB} — cosinor.glmm","title":"Fit cosinor model with {glmmTMB} — cosinor.glmm","text":"Given outcome time variable, fit cosinor model optional covariate effects.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/cosinor.glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit cosinor model with {glmmTMB} — cosinor.glmm","text":"","code":"cosinor.glmm(   formula,   data,   family = stats::gaussian(),   quietly = TRUE,   dispformula = ~1,   ziformula = ~0,   ... )"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/cosinor.glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit cosinor model with {glmmTMB} — cosinor.glmm","text":"formula Formula specifying model. Indicate time variable time() covariate effects amplitude acrophase amp_acro(). See details information. data Data frame variable can found. Row names corresponding variables specified formula inherited attributes; details unused columns inherited. analysis assumes data follows distribution specified 'family' parameter. family family function, see ?family ?glmmTMB::nbinom2 quietly controls whether messages amp_acro displayed. TRUE default dispformula Formula specifying dispersion model (optional). Use format main formula ziformula Formula specifying zero-inflation model (optional). Use format main formula ... optional additional arguments passed glmmTMB::glmmTMB()","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/cosinor.glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit cosinor model with {glmmTMB} — cosinor.glmm","text":"Returns fitted cosinor model cosinor.glmm object.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/cosinor.glmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit cosinor model with {glmmTMB} — cosinor.glmm","text":"defines special functions used formula indicate time variable covariates effect amplitude. indicate time variable wrap name function time(). indicate variable affects acrophase/amplitude, wrap name amp_acro(). transformations . See examples usage.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/cosinor.glmm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit cosinor model with {glmmTMB} — cosinor.glmm","text":"Tong, YL. Parameter Estimation Studying Circadian Rhythms, Biometrics (1976). 32(1):85--94.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/cosinor.glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit cosinor model with {glmmTMB} — cosinor.glmm","text":"","code":"cosinor.glmm(Y ~ X + amp_acro(time,   n_components = 3,   group = \"X\",   period = c(12, 8, 9) ), data = vitamind) #>  #>  Conditional Model  #>  #>  Raw formula:  #> Y ~ X + X:main_rrr1 + X:main_sss1 + X:main_rrr2 + X:main_sss2 +      X:main_rrr3 + X:main_sss3  #>  #>  Raw Coefficients:  #>               Estimate #> (Intercept)   29.72079 #> X1             5.04272 #> X0:main_rrr1   0.54500 #> X1:main_rrr1  25.78174 #> X0:main_sss1   2.18438 #> X1:main_sss1   4.20675 #> X0:main_rrr2   8.36514 #> X1:main_rrr2  -0.48442 #> X0:main_sss2  -3.60448 #> X1:main_sss2  24.27888 #> X0:main_rrr3  -8.38004 #> X1:main_rrr3 -20.49047 #> X0:main_sss3   8.71323 #> X1:main_sss3 -34.34724 #>  #>  Transformed Coefficients:  #>             Estimate #> (Intercept) 29.72079 #> [X=1]        5.04272 #> [X=0]:amp1   2.25134 #> [X=1]:amp1  26.12269 #> [X=0]:amp2   9.10867 #> [X=1]:amp2  24.28372 #> [X=0]:amp3  12.08906 #> [X=1]:amp3  39.99490 #> [X=0]:acr1  -1.32629 #> [X=1]:acr1  -0.16174 #> [X=0]:acr2   0.40685 #> [X=1]:acr2  -1.59075 #> [X=0]:acr3  -2.33670 #> [X=1]:acr3   2.10869"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/dot-amp_acro.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the validity of user inputs and creates formula and modifies dataframe — .amp_acro","title":"Checks the validity of user inputs and creates formula and modifies dataframe — .amp_acro","text":"Checks validity user inputs creates formula modifies dataframe","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/dot-amp_acro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the validity of user inputs and creates formula and modifies dataframe — .amp_acro","text":"","code":".amp_acro(   time_col,   n_components = 1,   group,   period,   .data,   .formula,   .quietly = TRUE,   .amp_acro_ind = -1,   .data_prefix = \"main_\",   .env )"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/dot-amp_acro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the validity of user inputs and creates formula and modifies dataframe — .amp_acro","text":"time_col column time values dataframe n_components number components model group vector names group factors. levels factor ordered, first level factor reference level period period component .data dataframe original cosinor.glmm() function .formula formula original cosinor.glmm() function .quietly controls whether messages amp_acro displayed. TRUE default .amp_acro_ind index portion formula containing amp_acro. -1 main formula (default), 0 zi disp formulae. .data_prefix prefix columns added new dataframe. Defaults \"main_\". .env environment evaluate column names data passed.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/dot-amp_acro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the validity of user inputs and creates formula and modifies dataframe — .amp_acro","text":"updated dataframe formula processed data_processor()","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/fit_model_and_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the cosinorGLMM model using the output from update_formula_and_data() and\na new formula — fit_model_and_process","title":"Fit the cosinorGLMM model using the output from update_formula_and_data() and\na new formula — fit_model_and_process","text":"Fit cosinorGLMM model using output update_formula_and_data() new formula","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/fit_model_and_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the cosinorGLMM model using the output from update_formula_and_data() and\na new formula — fit_model_and_process","text":"","code":"fit_model_and_process(obj, formula, ...)"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/fit_model_and_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the cosinorGLMM model using the output from update_formula_and_data() and\na new formula — fit_model_and_process","text":"obj output update_formula_and_data() formula new formula use fitting model (maybe random effects) ... optional additional arguments passed glmmTMB::glmmTMB()","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/fit_model_and_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the cosinorGLMM model using the output from update_formula_and_data() and\na new formula — fit_model_and_process","text":"Returns fitted cosinor model cosinor.glmm object.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/fit_model_and_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit the cosinorGLMM model using the output from update_formula_and_data() and\na new formula — fit_model_and_process","text":"","code":"vitamind2 <- vitamind vitamind2$patient <- sample(LETTERS[1:5], size = nrow(vitamind2), replace = TRUE) updated_df_and_formula <- update_formula_and_data(   data = vitamind2,   formula = Y ~ X + amp_acro(time,     group = \"X\",     period = 12   ) ) res <- fit_model_and_process(   updated_df_and_formula,   update.formula(updated_df_and_formula$newformula, . ~ . + (1 | patient)) )"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/plot.cosinor.glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a cosinor model — plot.cosinor.glmm","title":"Plot a cosinor model — plot.cosinor.glmm","text":"Given cosinor.glmm model fit, generate plot data fitted values. Optionally allows plotting covariates","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/plot.cosinor.glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a cosinor model — plot.cosinor.glmm","text":"","code":"# S3 method for cosinor.glmm plot(   x,   ci_level = 0.95,   x_str,   type = \"response\",   xlims,   pred.length.out = 200,   superimpose.data = FALSE,   data_opacity = 0.3,   predict.ribbon = TRUE,   ... )"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/plot.cosinor.glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a cosinor model — plot.cosinor.glmm","text":"x cosinor.glmm object. ci_level level calculated confidence intervals. Defaults 0.95. x_str Character vector naming covariate(s) plotted. Default value plots groups type Character passed argument predict.cosinor.glmm() function, specifying type prediction (e.g, \"response\", \"link\") xlims vector length two containing lower upper x limit plotted pred.length.integer value specifies number predicted datapoints. larger value, smooth fit appear superimpose.data logical argument (TRUE FALSE). TRUE, data original cosinor.glmm() object superimposed predicted fit data_opacity number bewteen 0 1 inclusive controls opacity superimposed data predict.ribbon logical argument (TRUE FALSE). TRUE, prediction interval plotted ... Additional, ignored arguments.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/plot.cosinor.glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a cosinor model — plot.cosinor.glmm","text":"Returns ggplot graphics object.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/plot.cosinor.glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a cosinor model — plot.cosinor.glmm","text":"","code":"model <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) plot(model, x_str = \"X\")"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/polar_plot.cosinor.glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a polar plot with elliptical confidence intervals — polar_plot.cosinor.glmm","title":"Generates a polar plot with elliptical confidence intervals — polar_plot.cosinor.glmm","text":"Generates polar plot elliptical confidence intervals","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/polar_plot.cosinor.glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a polar plot with elliptical confidence intervals — polar_plot.cosinor.glmm","text":"","code":"# S3 method for cosinor.glmm polar_plot(   x,   ci_level = 0.95,   contour_interval = 1,   component_index,   grid_angle_segments = 8,   radial_units = \"radians\",   clockwise = FALSE,   text_size = 3.5,   text_opacity = 1,   fill_colours,   ellipse_opacity = 0.3,   circle_linetype = \"dotted\",   start = \"right\",   view = \"full\",   overlay_parameter_info = FALSE,   quietly = TRUE,   ... )"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/polar_plot.cosinor.glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a polar plot with elliptical confidence intervals — polar_plot.cosinor.glmm","text":"x cosinor.glmm object. ci_level level calculated confidence ellipses. Defaults 0.95. contour_interval distance adjacent circular contours background polar plot. component_index number corresponds particular component cosinor.glmm() object used create polar plot. make_cowplot FALSE, component_index controls component plotted grid_angle_segments integer determines total number segments background polar plot. example, value 4 create quadrants around origin. radial_units string controlling angle units. Valid arguments : 'radians', 'degrees', 'period'. Radians plots 0 2*pi; degrees plots 0 360, period plots 0 maximum period component clockwise logical argument. TRUE, angles increase clockwise fashion text_size number controlling size text labels text_opacity number 0 1 inclusive determines opacity text labels fill_colours vector containing colours (expressed strings) used delineate levels within group. model components different number levels per factor, length input match greatest number levels. , number levels exceeds length default argument (8), colours generated using rainbow() ellipse_opacity number 0 1 inclusive determines opacity confidence ellipses circle_linetype string determines linetype radial circles background polar plot. See ?linetype details start character, either \"right\", \"left\", \"top\", \"bottom\" determines angle 0 located. start = \"top\", clockwise = TRUE, angle rotate clockwise, starting '12' position clock view character, either \"full\", \"zoom\", \"zoom_origin\" controls view plots. \"full\" maintains full view polar plot, including background radial circles. \"zoom\" finds minimum viewwindow contains confidence ellipses. \"zoom_origin\" zooms confidence ellipses (like \"zoom\"), also keeps origin within frame overlay_parameter_info logical argument. TRUE, information acrophase amplitude overlayed onto polar plots. quietly Analagous verbose, logical argument controls whether messages displayed console. ... Additional, ignored arguments.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/polar_plot.cosinor.glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a polar plot with elliptical confidence intervals — polar_plot.cosinor.glmm","text":"Returns ggplot graphics object.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/polar_plot.cosinor.glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a polar plot with elliptical confidence intervals — polar_plot.cosinor.glmm","text":"","code":"model <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) polar_plot(model)"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/polar_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a polar plot with elliptical confidence intervals — polar_plot","title":"Generates a polar plot with elliptical confidence intervals — polar_plot","text":"Generates polar plot elliptical confidence intervals","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/polar_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a polar plot with elliptical confidence intervals — polar_plot","text":"","code":"polar_plot(   x,   ci_level = 0.95,   contour_interval = 1,   component_index,   grid_angle_segments = 8,   radial_units = \"radians\",   clockwise = FALSE,   text_size = 3,   text_opacity = 0.5,   fill_colours,   ellipse_opacity = 0.3,   circle_linetype = \"dotted\",   start = \"right\",   view = \"full\",   overlay_parameter_info = FALSE,   quietly = TRUE,   ... )"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/polar_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a polar plot with elliptical confidence intervals — polar_plot","text":"x object class cosinor.glmm ci_level level calculated confidence ellipses. Defaults 0.95. contour_interval distance adjacent circular contours background polar plot. component_index number corresponds particular component cosinor.glmm() object used create polar plot. make_cowplot FALSE, component_index controls component plotted grid_angle_segments integer determines total number segments background polar plot. example, value 4 create quadrants around origin. radial_units string controlling angle units. Valid arguments : 'radians', 'degrees', 'period'. Radians plots 0 2*pi; degrees plots 0 360, period plots 0 maximum period component clockwise logical argument. TRUE, angles increase clockwise fashion text_size number controlling size text labels text_opacity number 0 1 inclusive determines opacity text labels fill_colours vector containing colours (expressed strings) used delineate levels within group. model components different number levels per factor, length input match greatest number levels. , number levels exceeds length default argument (8), colours generated using rainbow() ellipse_opacity number 0 1 inclusive determines opacity confidence ellipses circle_linetype string determines linetype radial circles background polar plot. See ?linetype details start character, either \"right\", \"left\", \"top\", \"bottom\" determines angle 0 located. start = \"top\", clockwise = TRUE, angle rotate clockwise, starting '12' position clock view character, either \"full\", \"zoom\", \"zoom_origin\" controls view plots. \"full\" maintains full view polar plot, including background radial circles. \"zoom\" finds minimum viewwindow contains confidence ellipses. \"zoom_origin\" zooms confidence ellipses (like \"zoom\"), also keeps origin within frame overlay_parameter_info logical argument. TRUE, information acrophase amplitude overlayed onto polar plots. quietly Analagous verbose, logical argument controls whether messages displayed console. ... Additional, ignored arguments.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/polar_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a polar plot with elliptical confidence intervals — polar_plot","text":"Returns ggplot graphics object.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/polar_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a polar plot with elliptical confidence intervals — polar_plot","text":"","code":"model <- cosinor.glmm(Y ~ X + amp_acro(time, group = \"X\", period = 12), data = vitamind) polar_plot(model)"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/predict.cosinor.glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a cosinor model — predict.cosinor.glmm","title":"Predict from a cosinor model — predict.cosinor.glmm","text":"Given time variable optional covariates, generate predicted values cosinor fit. Default prediction mean value, optionally can predict given month","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/predict.cosinor.glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a cosinor model — predict.cosinor.glmm","text":"","code":"# S3 method for cosinor.glmm predict(object, newdata, ...)"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/predict.cosinor.glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a cosinor model — predict.cosinor.glmm","text":"object object class cosinor.glmm newdata Optional new data ... arguments passed glmmTMB:::predict.glmmTMB","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/predict.cosinor.glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a cosinor model — predict.cosinor.glmm","text":"Returns predicted values cosinor model.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/predict.cosinor.glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a cosinor model — predict.cosinor.glmm","text":"","code":"fit <- cosinor.glmm(Y ~ X + amp_acro(time,   group = \"X\",   n_components = 1,   period = 12 ), data = vitamind) predict(fit) #>   [1] 28.78703 29.38899 39.65854 32.15901 33.23152 31.59433 23.83651 25.61113 #>   [9] 35.22545 30.23427 36.66338 35.07011 26.82298 35.51448 24.51868 31.44631 #>  [17] 30.00428 32.91062 28.62956 23.75660 35.10536 30.11651 33.63770 34.51069 #>  [25] 25.02505 25.25647 31.02807 23.60527 24.18237 39.37435 25.82357 39.59839 #>  [33] 28.24383 31.14540 35.25047 35.38660 23.42314 24.75488 32.49686 23.44897 #>  [41] 39.11973 23.74275 31.59794 23.83684 25.52791 24.60214 27.60858 28.42553 #>  [49] 35.83474 33.66548 36.72509 27.97113 33.23490 24.11053 24.85594 35.93978 #>  [57] 27.03989 24.93988 35.80208 30.54907 35.57846 27.91994 35.08763 23.59721 #>  [65] 28.99434 27.91936 34.94810 24.87614 35.64055 24.63725 27.62906 32.39134 #>  [73] 30.53587 26.22991 24.15941 29.70517 23.46939 29.52666 38.02665 38.71979 #>  [81] 23.62914 26.19744 35.92551 39.52855 31.46970 31.26501 23.80388 33.81262 #>  [89] 29.29779 24.16631 34.81420 35.51270 23.64597 28.25380 27.66860 28.18308 #>  [97] 23.49232 23.52321 27.05249 24.01758 32.66548 34.64840 23.96458 25.41950 #> [105] 32.41430 30.85780 34.78939 35.56505 33.49875 26.00210 27.13927 27.05351 #> [113] 24.50105 31.40587 24.19340 33.02303 28.51051 35.75483 26.79572 25.19659 #> [121] 25.26220 25.78390 28.30831 32.67383 39.09038 36.50282 28.24510 31.81259 #> [129] 35.83742 35.62749 25.21056 23.77412 33.73027 31.82716 29.17193 33.93879 #> [137] 35.28723 24.98276 32.45258 37.68323 28.36229 34.60108 31.45233 30.26221 #> [145] 35.96024 34.00755 27.33207 23.62559 23.82340 39.55556 36.93157 24.42923 #> [153] 33.54381 35.54254 24.52004 31.84621 26.92623 35.15592 31.66329 35.89971 #> [161] 28.54019 39.65296 23.96760 39.34180 38.38550 29.95681 24.85415 24.70597 #> [169] 38.73700 27.30479 27.17846 23.66411 37.66169 26.28373 39.57867 23.60737 #> [177] 25.78763 35.86054 24.56264 32.71904 27.19674 32.93022 23.63372 23.62670 #> [185] 34.29370 33.67406 34.70216 23.64030 32.34731 24.28945 31.90187 26.48566 #> [193] 24.47011 26.37521 26.95760 30.17249 24.55746 35.49054 28.32652 28.48194"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.cosinor.glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print cosinor model — print.cosinor.glmm","title":"Print cosinor model — print.cosinor.glmm","text":"Given outcome time variable, fit cosinor model optional covariate effects.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.cosinor.glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print cosinor model — print.cosinor.glmm","text":"","code":"# S3 method for cosinor.glmm print(x, digits = getOption(\"digits\"), ...)"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.cosinor.glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print cosinor model — print.cosinor.glmm","text":"x cosinor.glmm object digits Controls number digits displayed summary output ... passed summary","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.cosinor.glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print cosinor model — print.cosinor.glmm","text":"print returns x invisibly.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.summary.cosinor.glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the summary of a cosinor model — print.summary.cosinor.glmm","title":"Print the summary of a cosinor model — print.summary.cosinor.glmm","text":"Print summary cosinor model","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.summary.cosinor.glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the summary of a cosinor model — print.summary.cosinor.glmm","text":"","code":"# S3 method for summary.cosinor.glmm print(x, digits = getOption(\"digits\"), ...)"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.summary.cosinor.glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the summary of a cosinor model — print.summary.cosinor.glmm","text":"x object class summary.cosinor.glmm digits Controls number digits displayed summary output ... Currently unused","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.summary.cosinor.glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the summary of a cosinor model — print.summary.cosinor.glmm","text":"print returns x invisibly.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.summary.cosinor.glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the summary of a cosinor model — print.summary.cosinor.glmm","text":"","code":"fit <- cosinor.glmm(Y ~ X + amp_acro(time,   group = \"X\",   n_components = 1,   period = 12 ), data = vitamind) summary(fit) #>  #>  Conditional Model  #> Raw model coefficients: #>                estimate standard.error   lower.CI upper.CI    p.value     #> (Intercept)  29.6897959      0.4583696 28.7914079 30.58818 < 2.22e-16 *** #> X1            1.9018623      0.7919688  0.3496320  3.45409   0.016331 *   #> X0:main_rrr1  0.9307876      0.6260656 -0.2962784  2.15785   0.137087     #> X1:main_rrr1  6.5102900      0.9303406  4.6868560  8.33372 2.6011e-12 *** #> X0:main_sss1  6.2009896      0.6701952  4.8874311  7.51455 < 2.22e-16 *** #> X1:main_sss1  4.8184618      0.8963299  3.0616875  6.57524 7.6257e-08 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Transformed coefficients: #>                estimate standard.error    lower.CI upper.CI    p.value     #> (Intercept) 29.68979587     0.45836964 28.79140787 30.58818 < 2.22e-16 *** #> [X=1]        1.90186227     0.79196879  0.34963197  3.45409   0.016331 *   #> [X=0]:amp1   6.27045757     0.66965642  4.95795510  7.58296 < 2.22e-16 *** #> [X=1]:amp1   8.09947222     1.10283566  5.93795403 10.26099 2.0696e-13 *** #> [X=0]:acr1  -1.42180558     0.09993559 -1.61767574 -1.22594 < 2.22e-16 *** #> [X=1]:acr1  -0.63715441     0.14043625 -0.91240440 -0.36190 5.7069e-06 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Print test of model — print.test","title":"Print test of model — print.test","text":"Print test model","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print test of model — print.test","text":"","code":"# S3 method for test print(x, ...)"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print test of model — print.test","text":"x test object ... Additional, ignored arguments.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print test of model — print.test","text":"print returns x invisibly.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.test_cosinor.html","id":null,"dir":"Reference","previous_headings":"","what":"Print results of test of cosinor model — print.test_cosinor","title":"Print results of test of cosinor model — print.test_cosinor","text":"Print results test cosinor model","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.test_cosinor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print results of test of cosinor model — print.test_cosinor","text":"","code":"# S3 method for test_cosinor print(x, ...)"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.test_cosinor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print results of test of cosinor model — print.test_cosinor","text":"x test_cosinor object ... Arguments passed print","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/print.test_cosinor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print results of test of cosinor model — print.test_cosinor","text":"print returns x invisibly.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/simulate_cosinor.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data from a cosinor model — simulate_cosinor","title":"Simulate data from a cosinor model — simulate_cosinor","text":"function simulates data cosinor model single covariate, time scale month, optionally allows single covariate effects mean, amplitude, acrophase.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/simulate_cosinor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data from a cosinor model — simulate_cosinor","text":"","code":"simulate_cosinor(   n,   mesor,   amp,   acro,   period = 24,   n_components,   beta.group = FALSE,   beta.mesor,   beta.amp,   beta.acro,   family = c(\"gaussian\", \"poisson\", \"binomial\", \"gamma\"),   ... )"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/simulate_cosinor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data from a cosinor model — simulate_cosinor","text":"n Sample size. Integer greater 0. mesor Mesor parameter group = 0.multiple components, specify parameters component vector. E.g: mesor = c(1,2) two components amp Amplitude parameter term group = 0.multiple components, specify parameters component vector. E.g: amp = c(1,2) two components acro Acrophase parameter group = 0. units radians.multiple components, specify parameters component vector. E.g: acr = c(1,2) two components period period data. multiple components, specify parameters component vector. E.g: mesor = c(12,6) two components n_components number components model. must match length parameter inputs beta.group logical argument. TRUE want simulate second group dataset. FALSE, beta. arguments ignored beta.mesor Amplitude parameter term group = 1.multiple components, specify parameters component vector. E.g: amp = c(1,2) two components beta.amp Acrophase parameter group = 1. units radians.multiple components, specify parameters component vector. E.g: acr = c(1,2) two components beta.acro Mesor parameter group = 1.multiple components, specify parameters component vector. E.g: mesor = c(1,2) two components family family simulated dataset expressed string. Can take values: \"poisson\", \"binomial\", \"gamma\", \"gaussian\" ... Extra arguments, alpha parameter gamma simulation, sd (standard deviation) gaussian simulation","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/simulate_cosinor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data from a cosinor model — simulate_cosinor","text":"Returns simulated data data.frame.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/summary.cosinor.glmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a cosinor model — summary.cosinor.glmm","title":"Summarize a cosinor model — summary.cosinor.glmm","text":"Given time variable optional covariates, generate inference cosinor fit. Gives estimates, confidence intervals, tests raw parameters, mean, amplitude, acrophase parameters. model includes covariates, function returns estimates mean, amplitude, acrophase group covariates equal 1 equal 0. may desired result continuous covariates.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/summary.cosinor.glmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a cosinor model — summary.cosinor.glmm","text":"","code":"# S3 method for cosinor.glmm summary(object, ci_level = 0.95, ...)"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/summary.cosinor.glmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a cosinor model — summary.cosinor.glmm","text":"object object class cosinor.glmm ci_level level calculated confidence intervals. Defaults 0.95. ... Currently unused","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/summary.cosinor.glmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a cosinor model — summary.cosinor.glmm","text":"Returns summary cosinor.glmm model summary.cosinor.glmm object.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/summary.cosinor.glmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a cosinor model — summary.cosinor.glmm","text":"","code":"fit <- cosinor.glmm(Y ~ X + amp_acro(time,   group = \"X\",   n_components = 1,   period = 12 ), data = vitamind) summary(fit) #>  #>  Conditional Model  #> Raw model coefficients: #>                estimate standard.error   lower.CI upper.CI    p.value     #> (Intercept)  29.6897959      0.4583696 28.7914079 30.58818 < 2.22e-16 *** #> X1            1.9018623      0.7919688  0.3496320  3.45409   0.016331 *   #> X0:main_rrr1  0.9307876      0.6260656 -0.2962784  2.15785   0.137087     #> X1:main_rrr1  6.5102900      0.9303406  4.6868560  8.33372 2.6011e-12 *** #> X0:main_sss1  6.2009896      0.6701952  4.8874311  7.51455 < 2.22e-16 *** #> X1:main_sss1  4.8184618      0.8963299  3.0616875  6.57524 7.6257e-08 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Transformed coefficients: #>                estimate standard.error    lower.CI upper.CI    p.value     #> (Intercept) 29.68979587     0.45836964 28.79140787 30.58818 < 2.22e-16 *** #> [X=1]        1.90186227     0.79196879  0.34963197  3.45409   0.016331 *   #> [X=0]:amp1   6.27045757     0.66965642  4.95795510  7.58296 < 2.22e-16 *** #> [X=1]:amp1   8.09947222     1.10283566  5.93795403 10.26099 2.0696e-13 *** #> [X=0]:acr1  -1.42180558     0.09993559 -1.61767574 -1.22594 < 2.22e-16 *** #> [X=1]:acr1  -0.63715441     0.14043625 -0.91240440 -0.36190 5.7069e-06 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/test_cosinor.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for differences in a cosinor model — test_cosinor","title":"Test for differences in a cosinor model — test_cosinor","text":"Given time variable optional covariates, generate inference cosinor fit. covariate named (vector covariates), function performs Wald test comparing group covariates equal 1 group covariates equal 0. may desired result continuous covariates.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/test_cosinor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for differences in a cosinor model — test_cosinor","text":"","code":"test_cosinor(   x,   x_str,   param = c(\"amp\", \"acr\"),   comparison_A = 0,   comparison_B = 1,   comparison_type = \"levels\",   component_index = 1,   level_index = 0,   ci_level = 0.95 )"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/test_cosinor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for differences in a cosinor model — test_cosinor","text":"x object class cosinor.glmm x_str Character naming covariate whose amplitude/acrophase tested param Character string naming parameter test, either \"amp\" amplitude \"acr\" acrophase comparison_A number, referring level (within group) component number compared comparison_B comparison_B number, referring level (within group) component number compared comparison_A comparison_type string either: \"levels\" (default), \"components\". \"levels\", comparison_A comparison_B refer two levels compared. comparison_type = \"components\", comparison_A component compared comparison_B component component_index comparison_type = \"levels\", controls single component levels compared . Note component_index must integer, must refer component within model level_index comparison_type = \"components\", controls single level components compared . Note level_index must integer, must refer level within model ci_level level calculated confidence intervals. Defaults 0.95.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/test_cosinor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for differences in a cosinor model — test_cosinor","text":"Returns test_cosinor object.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/test_cosinor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for differences in a cosinor model — test_cosinor","text":"","code":"fit <- cosinor.glmm(Y ~ X + amp_acro(time,   group = \"X\",   n_components = 1,   period = 12 ), data = vitamind) test_cosinor(fit, \"X\", \"amp\") #> Global test:  #> Statistic:  #> [1] 3.22 #>  #>  #>  P-value:  #> [1] 0.0728 #>  #>  Individual tests:  #> Statistic:  #> [1] 1.79 #>  #>  #>  P-value:  #> [1] 0.0728 #>  #>  Estimate and confidence interval[1] \"1.83 (-0.17 to 3.83)\""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/update_formula_and_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Update data and formula for fitting cosinor.glmm model — update_formula_and_data","title":"Update data and formula for fitting cosinor.glmm model — update_formula_and_data","text":"Update data formula fitting cosinor.glmm model","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/update_formula_and_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update data and formula for fitting cosinor.glmm model — update_formula_and_data","text":"","code":"update_formula_and_data(   data,   formula,   family = \"gaussian\",   quietly = TRUE,   dispformula = ~1,   ziformula = ~0 )"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/update_formula_and_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update data and formula for fitting cosinor.glmm model — update_formula_and_data","text":"data input data fitting cosinor.glmm model. formula model formula, specified user including amp_acro(). family model family. quietly controls whether messages amp_acro displayed. TRUE default dispformula formula specifying dispersion model ziformula formula specifying zero-inflation model","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/update_formula_and_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update data and formula for fitting cosinor.glmm model — update_formula_and_data","text":"Returns list.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/vitamind.html","id":null,"dir":"Reference","previous_headings":"","what":"Vitamin D — vitamind","title":"Vitamin D — vitamind","text":"Simulated data set illustrate cosinor model. Y outcome variable varies time time according cosine curve. binary covariate X associated mean amplitude cosine curve.","code":""},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/vitamind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vitamin D — vitamind","text":"","code":"vitamind"},{"path":"https://rwparsons.github.io/GLMMcosinor/reference/vitamind.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vitamin D — vitamind","text":"data frame 3 variables: X, Y, time.","code":""}]
